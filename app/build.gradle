plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'io.gitlab.arturbosch.detekt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.material.demo"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all{
            variant ->
                variant.outputs.each{
                    output->
                        def name = "m3DemoApp-${variant.buildType.name}-${variant.versionName}-${getDate()}.apk"
                        output.outputFileName = name
                }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        compose true

        // Disable unused AGP features
        buildConfig true
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion rootProject.composeVersion
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/licenses/**']
        }
        resources {
            excludes += ['META-INF/licenses/**', 'META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }

    if (System.getProperty("idea.active") != "true") {
        lintOptions {
            quiet false
            abortOnError true
            lintConfig file("${project.rootDir}/analysis/lint/lint.xml")
            htmlOutput file("${project.buildDir}/reports/lint/lint.html")
        }
    }

}

static def getDate() {
    new Date().format('MMMddYYYY_HHmm')
}

dependencies {
    //Base libs and Jetpack
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlinVersion"

    // Compose
    implementation "androidx.compose.runtime:runtime:$rootProject.composeVersion"
    implementation "androidx.compose.ui:ui:$rootProject.composeVersion"
    implementation "androidx.compose.foundation:foundation:$rootProject.composeVersion"
    implementation "androidx.compose.foundation:foundation-layout:$rootProject.composeVersion"
    implementation "androidx.compose.material3:material3:$rootProject.material3Version"
    implementation "androidx.compose.ui:ui-tooling:$rootProject.composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$rootProject.composeVersion"
    implementation "androidx.activity:activity-compose:$rootProject.activityComposeVersion"
    implementation "androidx.navigation:navigation-compose:$rootProject.composeNavigationVersion"

    // Accompianist
    implementation "com.google.accompanist:accompanist-navigation-material:0.23.1"

    // Util libs
    implementation 'io.coil-kt:coil-compose:2.1.0'

    // Testing dependencies
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$rootProject.composeVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    debugImplementation "androidx.compose.ui:ui-tooling:$rootProject.composeVersion"

    // Compose testing dependencies
    androidTestImplementation "androidx.compose.ui:ui-test:$rootProject.composeVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$rootProject.composeVersion"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$rootProject.composeVersion"
}